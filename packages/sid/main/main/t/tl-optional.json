{
	"Architecture": [
		"all"
	],
	"Binary": [
		"libtl-optional-dev"
	],
	"Build-Depends": [
		"debhelper-compat (= 13), catch2 <!nocheck>, cmake"
	],
	"Checksums-Sha256": [
		"e2e08a1afce0e2f5ed6574b65eb06c5ff441b2fa854283e9aeb480c647735f69 2541 tl-optional_1.1.0-2.dsc 80f92c1fa651d252c9b962483e4543322e87a4f0a8a40a769951f4bf1cb7ed0e 22277 tl-optional_1.1.0.orig.tar.gz f4abe7b54f9e251bbdb3e43041424b5ad03a99216fd9efa62abd47d749caa088 4320 tl-optional_1.1.0-2.debian.tar.xz"
	],
	"Description": [
		"C++11/14/17 std::optional with functional-style extensions std::optional is the preferred way to represent an object which may or may not have a value. Unfortunately, chaining together many computations which may or may not produce a value can be verbose, as empty-checking code will be mixed in with the actual programming logic. This implementation provides a number of utilities to make coding with optional cleaner."
	],
	"Dgit": [
		"548fd9c53beb03fc1723ec105a43174294e45117 debian archive/debian/1.1.0-2 https://git.dgit.debian.org/tl-optional"
	],
	"Directory": [
		"pool/main/t/tl-optional"
	],
	"Files": [
		"7623a3456f630aae4d708b9bba35996d 2541 tl-optional_1.1.0-2.dsc 6ab7a07627e4cf4b73a20b29a67f3e00 22277 tl-optional_1.1.0.orig.tar.gz 7888918a393e55848e93eb1b7e91cf6d 4320 tl-optional_1.1.0-2.debian.tar.xz"
	],
	"Format": [
		"3.0 (quilt)"
	],
	"Homepage": [
		"https://github.com/TartanLlama/optional"
	],
	"Maintainer": [
		"Timo RÃ¶hling <roehling@debian.org>"
	],
	"Package": [
		"tl-optional"
	],
	"Package-List": [
		"libtl-optional-dev deb libdevel optional arch=all"
	],
	"Priority": [
		"optional"
	],
	"Section": [
		"misc"
	],
	"Standards-Version": [
		"4.7.0"
	],
	"Testsuite": [
		"autopkgtest"
	],
	"Testsuite-Triggers": [
		"@builddeps@"
	],
	"Vcs-Browser": [
		"https://salsa.debian.org/debian/tl-optional"
	],
	"Vcs-Git": [
		"https://salsa.debian.org/debian/tl-optional.git"
	],
	"Version": [
		"1.1.0-2"
	]
}
