{
	"header": {
		"line": "CVE-2011-0285 (The process_chpw_request function in schpw.c in the password-changing  ...)",
		"name": "CVE-2011-0285",
		"description": "(The process_chpw_request function in schpw.c in the password-changing  ...)"
	},
	"annotations": [
		{
			"line": "\t- krb5 1.9.1+dfsg-1 (bug #622681)",
			"type": "package",
			"package": "krb5",
			"kind": "fixed",
			"version": "1.9.1+dfsg-1",
			"flags": [
				{
					"bug": 622681
				}
			]
		},
		{
			"line": "\t[squeeze] - krb5 1.8.3+dfsg-4squeeze1",
			"type": "package",
			"release": "squeeze",
			"package": "krb5",
			"kind": "fixed",
			"version": "1.8.3+dfsg-4squeeze1"
		},
		{
			"line": "\t[lenny] - krb5 <not-affected> (see below)",
			"type": "package",
			"release": "lenny",
			"package": "krb5",
			"kind": "not-affected",
			"description": "see below"
		},
		{
			"line": "\tNOTE: 1.6 is not affected: While the error case in the process_chpw_request()",
			"type": "NOTE",
			"description": "1.6 is not affected: While the error case in the process_chpw_request()"
		},
		{
			"line": "\tNOTE: in kadmind in 1.6 can leave the data pointer uninitialized, the error",
			"type": "NOTE",
			"description": "in kadmind in 1.6 can leave the data pointer uninitialized, the error"
		},
		{
			"line": "\tNOTE: path in its caller will not free() that pointer (the invalid pointer",
			"type": "NOTE",
			"description": "path in its caller will not free() that pointer (the invalid pointer"
		},
		{
			"line": "\tNOTE: goes out of scope without being freed), unlike in krb5-1.7 and later.",
			"type": "NOTE",
			"description": "goes out of scope without being freed), unlike in krb5-1.7 and later."
		},
		{
			"line": "\tNOTE: Those later releases add support for password changing over TCP, and",
			"type": "NOTE",
			"description": "Those later releases add support for password changing over TCP, and"
		},
		{
			"line": "\tNOTE: the error path in the TCP handling code is what frees the",
			"type": "NOTE",
			"description": "the error path in the TCP handling code is what frees the"
		},
		{
			"line": "\tNOTE: uninitialized pointer. (Clarification by Tom Yu)",
			"type": "NOTE",
			"description": "uninitialized pointer. (Clarification by Tom Yu)"
		}
	]
}
